main() 
{
int OS_Level = random(1..65535);
ip_addr ip = getip(eth0);

if (get_arg(nick) != NULL)
  nick = get_arg(nick)
else
  nick = getHostname();

setup_multicast();
init_filedesriptors();

setState(STATE_INIT);
send_multicast(Request_Membership)

while true
   
   resetGlobalTimer();
   retval = select(filedescriptors);

   if (retval == 0) {
      switch(STATE)
      case STATE_INIT
        setState(STATE_FORCEELECTION);
   
      case STATE_MASTERFOUND
        if (MAXREQ > 0) {
          send_multicast(Get_BrowseList);
          MAXREQ--: }
        else
          setState(STATE_FORCEELECTION);
   
      case STATE_BROWSELIST_RCVD
        if (unicast_is_setup != true)
          setup_unicast();
   
      case STATE_FORCEELECTION
        send_multicast(Force_Election);
        send_multicast(OS_Level);
        setState(STATE_I_AM_MASTER);
	MasterDelay = 4; // wait 3 cycles until we are sure we are TEH MAST0R
   
      case STATE_I_AM_MASTER
        if (MasterDelay > 1)
          MasterDelay--
        else if (MasterDelay == 1) {
          send_multicast(get_ClientCredentials);
          MasterDelay = 0;
        }
   } else {
      if ( data_on_multicast ) {
        if (((STATE == STATE_INIT) || (STATE == STATE_FORCEELECTION)) && (data_on_multicast.type == I_Am_Master))
          setState(STATE_MASTERFOUND);
        else if ((STATE == STATE_I_AM_MASTER) && (data_on_multicast.type == OS_Level) && (data_on_multicast.value > OS_Level))
          setState(STATE_MASTERFOUND);
        else if ((STATE == STATE_I_AM_MASTER) && (data_on_multicast.type == RequestMembership))
          send_multicast(I_Am_Master);
        else if ((STATE == STATE_I_AM_MASTER) && (data_on_multicast.type == Get_BrowseList))
          send_multicast(BrowseList);
        else if ((STATE == STATE_I_AM_MASTER) && (data_on_multicast.type == ClientCredentials))
          update_masterlist(data_on_multicast.value);
        // TODO: Just got master, ask all clients for their credentials
        else if ((STATE == STATE_MASTERFOUND) && (data_on_multicast.type == BrowseList)) {
          setup_browselist(data_on_multicast.value);
          setState(STATE_BROWSELIST_RCVD);
        } else if ((STATE == STATE_BROWSELIST_RCVD) && (data_on_multicast.type == BrowseList))
	   update_browselist(data_on_multicast.value);
        else if ((STATE == STATE_BROWSELIST_RCVD) && (data_on_multicast.type == Force_Election)) {
           send_multicast(OS_Level);
           setState(STATE_I_AM_MASTER);
        } else if ((STATE != STATE_I_AM_MASTER) &&  (data_in_multicast.type == get_ClientCredentials))
          send_multicast(ClientCredentials)
     } else if ( data_on_unicast )
        display(data_on_unicast);
     else if ( data_on_stdin )
        handleInput(stdin);
     }
     
}

setup_multicast() {
socket_setup();
join_multicast_group();
}
